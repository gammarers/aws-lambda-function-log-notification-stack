// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`hello 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "LambdaFunctionLogNotificationTopic967482F1": {
      "Properties": {
        "DisplayName": "Lambda Function Log Notification Topic",
        "TopicName": "lambda-func-log-notification-72197c83-topic",
      },
      "Type": "AWS::SNS::Topic",
    },
    "LambdaFunctionLogNotificationTopicfooexamplecom3BAB5817": {
      "Properties": {
        "Endpoint": "foo@example.com",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "LambdaFunctionLogNotificationTopic967482F1",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "NotificationFunction0492F7EA": {
      "DependsOn": [
        "NotificationLambdaExecutionRole6DE166BB",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "f10af532904d1a0f50e2648c7a09e0691fea5084be49769b8aad8207242e35b5.zip",
        },
        "Description": "src/funcs/notification.lambda.ts",
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "FunctionName": "lambda-function-log-notification-72197c83-func",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "NotificationLambdaExecutionRole6DE166BB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 180,
      },
      "Type": "AWS::Lambda::Function",
    },
    "NotificationLambdaExecutionRole6DE166BB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "RoleName": "lambda-log-notification-func-72197c83-exec-role",
      },
      "Type": "AWS::IAM::Role",
    },
    "SubscriptionFilter0F100A80": {
      "DependsOn": [
        "SubscriptionFilterCanInvokeLambda00190AC0",
      ],
      "Properties": {
        "DestinationArn": {
          "Fn::GetAtt": [
            "NotificationFunction0492F7EA",
            "Arn",
          ],
        },
        "FilterPattern": "{ $.level = "ERROR" || $.level = "WARN" }",
        "LogGroupName": "example-function-log",
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "SubscriptionFilterCanInvokeLambda00190AC0": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "NotificationFunction0492F7EA",
            "Arn",
          ],
        },
        "Principal": "logs.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":logs:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":log-group:example-function-log:*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
